0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.3.6
3 info using node@v5.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/Mathias/Desktop/upload-controller',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/Mathias/.npm/upload-controller/0.1.4/package.tgz not in flight; packing
9 info lifecycle upload-controller@0.1.4~prepublish: upload-controller@0.1.4
10 silly lifecycle upload-controller@0.1.4~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/Mathias/.npm/upload-controller/0.1.4/package.tgz',
11 verbose tar pack   '/Users/Mathias/Desktop/upload-controller' ]
12 verbose tarball /Users/Mathias/.npm/upload-controller/0.1.4/package.tgz
13 verbose folder /Users/Mathias/Desktop/upload-controller
14 verbose addLocalTarball adding from inside cache /Users/Mathias/.npm/upload-controller/0.1.4/package.tgz
15 silly cache afterAdd upload-controller@0.1.4
16 verbose afterAdd /Users/Mathias/.npm/upload-controller/0.1.4/package/package.json not in flight; writing
17 verbose afterAdd /Users/Mathias/.npm/upload-controller/0.1.4/package/package.json written
18 silly publish { name: 'upload-controller',
18 silly publish   description: 'XHR upload',
18 silly publish   version: '0.1.4',
18 silly publish   author: { name: 'Mathias Nlsson' },
18 silly publish   license: 'MIT',
18 silly publish   bugs: { url: 'https://github.com/edgesoft/upload-controller/issues' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git://github.com/edgesoft/upload-controller.git' },
18 silly publish   scripts: {},
18 silly publish   readme: '# upload-controller\n\nA simple upload controller to upload single files. Allow for uploads in React,\nAngular components to continue even if the component is unmounted.\n\n## install\n\nnpm install upload-controller\n\n## Usage\n\n```js\nimport uploadController from \'upload-controller\';\n\nuploadController(this.files, {\n  url: \'/upload\',\n  onProgress: onProgress,\n  onEnd: onEnd\n});\n\nfunction onEnd () {\n  console.log(\'The file is uploaded\')\n}\n\nfunction onProgress ({percentComplete}) {\n  console.log(percentComplete);\n}\n\n```\n\n### simple React version\n```js\nimport React, {Component} from \'react\'\nimport uploadController from \'uploadController\'\n\nclass Upload extends Component {\n\n  constructor (props) {\n    super(props);\n    this.files = [];\n    this.onFilesChange = this.onFilesChange.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  onFilesChange (event) {\n  \tlet files = event.target.files;\n    this.files = files;\n  }\n\n  upload () {\n    uploadController(this.files, {\n   \t  url: \'/upload\',\n      onProgress: () => {}, // make callback\n      onEnd: () => {} // make callback\n    });    \n  }\n\n  render () {\n    return (\n      <div>\n          <h4>Please choose a file.</h4>\n          <div>\n            <input type={\'file\'} onChange={this.onFilesChange}/><br/><br/>\n            <button disabled={this.files.length === 0} onClick={this.upload}>Upload</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n```\n\n## server\nFire up your express server. The example below is for formidable but you\ncould use any multipart/upload server parser.\n\n```js\nvar express = require(\'express\');\nvar app = express();\nvar formidable = require(\'formidable\');\n\napp.post( \'/upload\' , function(req, res ){\n     var form = new formidable.IncomingForm({\n     \tuploadDir: \'/some/dir/\',\n        keepExtensions: true\n     });\n     form.on(\'progress\', function(bytesReceived, bytesExpected) {\n        var percent_complete = (bytesReceived / bytesExpected) * 100;\n    });\n\n    form.on(\'end\', function(fields, files) {\n        res.send({});\n    });\n\n    form.parse(req);\n});\n```\n\n## Next\nAnyone have need for multi upload? Add an issue. We need to discuss how callbacks\nshould be handled when having multiple files. Should we add support for additional parameters for the form\nupload? Please add an issue if you have questions or want some features.\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '12ea23f47c0a0da0b68e75d752b031fd341cd709',
18 silly publish   homepage: 'https://github.com/edgesoft/upload-controller#readme',
18 silly publish   _id: 'upload-controller@0.1.4',
18 silly publish   _shasum: 'b53b1c6c84ccb46b957678208ff43151a1e439cf',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name upload-controller
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/upload-controller
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/Mathias/.npm/upload-controller/0.1.4/package.tgz
26 verbose request uri https://registry.npmjs.org/upload-controller
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 00:02:59
29 verbose request using bearer token for auth
30 verbose request id b271bdf4a89192f8
31 http request PUT https://registry.npmjs.org/upload-controller
32 http 403 https://registry.npmjs.org/upload-controller
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Tue, 12 Apr 2016 22:03:00 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-fra1241-FRA',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1460498579.738554,VS0,VE943',
33 verbose headers   vary: 'Accept-Encoding' }
34 verbose request invalidating /Users/Mathias/.npm/registry.npmjs.org/upload-controller on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.1.4." : upload-controller
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid upload-controller
39 verbose cwd /Users/Mathias/Desktop/upload-controller
40 error Darwin 15.3.0
41 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
42 error node v5.0.0
43 error npm  v3.3.6
44 error code E403
45 error "You cannot publish over the previously published version 0.1.4." : upload-controller
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
